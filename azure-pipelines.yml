trigger:
  - main  # or your default branch

pool:
  vmImage: 'ubuntu-latest'

variables:
  # Update these values according to your setup
  resourceGroupName: 'app-codepush-envimo-prod-ase'
  webAppName: 'codepush'  # Replace with your Web App name
  projectSuffix: 'ap21'   # Same as used in infrastructure deployment
  azLocation: 'australiasoutheast'  # Your Azure region

stages:
- stage: Build
  displayName: 'Build Stage'
  jobs:
  - job: Build
    displayName: 'Build Job'
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '18.x'
      displayName: 'Install Node.js'

    - script: |
        cd api
        npm install
        npm run build
      displayName: 'Build API Server'

    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)/api'
        Contents: |
          bin/**
          package.json
          package-lock.json
          .env.example
          codepush-infrastructure.bicep
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
      displayName: 'Copy API Files'

    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(Build.ArtifactStagingDirectory)'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/$(webAppName).zip'
        replaceExistingArchive: true
      displayName: 'Archive Files'

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)/$(webAppName).zip'
        ArtifactName: 'drop'
        publishLocation: 'Container'
      displayName: 'Publish Artifacts'

- stage: Deploy
  displayName: 'Deploy Stage'
  dependsOn: Build
  jobs:
  - job: Deploy
    displayName: 'Deploy Job'
    steps:
    - task: DownloadBuildArtifacts@1
      inputs:
        buildType: 'current'
        downloadType: 'single'
        artifactName: 'drop'
        downloadPath: '$(System.ArtifactsDirectory)'
      displayName: 'Download Artifacts'

    # Use GitHub service connection for source code checkout
    - checkout: self
      displayName: 'Checkout Source Code'
      persistCredentials: true

    # For Azure Web App deployment, use a separate Azure RM service connection
    # You need to create this in Azure DevOps Project Settings > Service Connections
    - task: AzureWebApp@1
      inputs:
        azureSubscription: 'Codepush SC'  # Your Azure RM service connection name
        appType: 'webApp'
        appName: '$(webAppName)'
        package: '$(System.ArtifactsDirectory)/drop/$(webAppName).zip'
        deploymentMethod: 'auto'
      displayName: 'Deploy Azure Web App'

    # Optional: Configure App Settings
    - task: AzureAppServiceSettings@1
      inputs:
        azureSubscription: 'Codepush SC'  # Your Azure RM service connection name
        appName: '$(webAppName)'
        resourceGroupName: '$(resourceGroupName)'
        appSettings: |
          [
            {
              "name": "NODE_ENV",
              "value": "production",
              "slotSetting": false
            },
            {
              "name": "STORAGE_ACCOUNT_NAME",
              "value": "$(projectSuffix)storage",
              "slotSetting": false
            },
            {
              "name": "EMULATED",
              "value": "false",
              "slotSetting": false
            },
            {
              "name": "HTTPS",
              "value": "true",
              "slotSetting": false
            }
          ]
      displayName: 'Configure App Settings'